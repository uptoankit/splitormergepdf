var smpApp=smpApp||{};smpApp=angular.module("smp.main.splitmergepdfs",["ngAnimate","ngResource","ui.router","ngRoute","ngSanitize","ngTouch","ui.bootstrap","ngStorage","ngCookies","angularMoment","smp.splitmergepdfs.split","smp.splitmergepdfs.merge"]),smpApp.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$stateProvider.state("splitmergepdfs",{views:{"header@":{controller:"headerCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/common/header/header.html"}}}).state("splitmergepdfs.split",{title:"Cisco Commerce Workspace",url:"/split",views:{"header@":{controller:"headerCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/common/header/header.html"},"container@":{title:"Split",controller:"splitCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/split/split.html"},"footer@":{controller:"headerCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/common/footer/footer.html"}}}).state("splitmergepdfs.merge",{title:"Cisco Commerce Workspace",url:"/merge",views:{"header@":{controller:"headerCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/common/header/header.html"},"container@":{title:"Merge",controller:"mergeCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/merge/merge.html"},"footer@":{controller:"headerCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/common/footer/footer.html"}}}).state("otherwise",{title:"Cisco Commerce Workspace",url:"",views:{"header@":{controller:"headerCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/common/header/header.html"},"container@":{controller:"baseCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/split/split.html"},"footer@":{controller:"footerCtrl",templateUrl:_appContextUrl+"ui-resources/smp/modules/common/footer/footer.html"}}})}]),smpApp.config(["$uibTooltipProvider",function($uibTooltipProvider){$uibTooltipProvider.options({trigger:"mouseenter",appendToBody:!0})}]),smpApp.config(["$logProvider",function($logProvider){$logProvider.debugEnabled(!1)}]),smpApp.run(["$rootScope","$state","$stateParams","$location","$log","$localStorage","$anchorScroll",function($rootScope,$state,$stateParams,$location,$log,$localStorage,$anchorScroll){$rootScope.activateDealTab=!0,$rootScope.activateQuoteTab=!1,$rootScope.activateReviewTab=!1,$rootScope.activateOrderTab=!1,$rootScope.activateConsumtionSummTab=!1,$rootScope.path={modules:_appContextUrl+"ui-resources/smp/modules/"},$rootScope.$state=$state,$rootScope.continueClick=!1,$rootScope.sQuoteModelHeading="LABEL.CHANGE.DEAL.NAME",$rootScope.sQuoteModelLabel="LABEL.DEAL.DEALNAME",$rootScope.bWhoisInvolvedLeadPartner=!1,$rootScope.bIsFixedLayout=!1,$rootScope.regExpName=new RegExp("^[-_. a-zA-Z0-9À-ÿ一-鿿⺀-⻿぀-ゟ゠-ヿ㈀-㋿㌀-㏿一-鿿豈-﫿︰-﹏]+$"),$rootScope.regExpTitle=new RegExp("^[-_.&/’';(), a-zA-Z0-9À-ÿ一-鿿⺀-⻿぀-ゟ゠-ヿ㈀-㋿㌀-㏿一-鿿豈-﫿︰-﹏]+$"),$rootScope.regExpEmail=/^[^\s@]+@[^\s@]+\.([^\s@\u00C0-\u00ff\u4E00-\u9FFF\u2E80-\u2EFF\u3040-\u309F\u30A0-\u30FF\u3200-\u32FF\u3300-\u33FF\u4E00-\u9FFF\uF900-\uFAFF\uFE30-\uFE4F]{2,})+$/i,$rootScope.checkAll=function(c,a){angular.forEach(a,function(o){o.selected=c})},$rootScope.isOneSelected=function(a){var s=!1;return angular.forEach(a,function(o){if(o.selected)return void(s=!0)}),s},$rootScope.viewLink=function(link){$location.path(link),$anchorScroll(0)},$rootScope.isLink=function(link){return link===$location.path()||$location.path().indexOf(link+"/")>-1},$rootScope.closeAlert=function(i,a){a.splice(i,1)},$rootScope.containsObject=function(obj,list){var i;for(i=0;i<list.length;i++)if(angular.equals(list[i],obj))return i;return-1},$rootScope.navigate=function(stateName,quoteId,dealId){$state.go(stateName,{quoteId:quoteId,dealId:dealId},{location:!0,inherit:!1})},$rootScope.typeOf=function(value){return typeof value},$rootScope.isEmpty=function(obj){for(var i in obj)if(obj.hasOwnProperty(i))return!1;return!0},$rootScope.uniq=function(a){var seen={};return a.filter(function(item){return!seen.hasOwnProperty(item)&&(seen[item]=!0)})}}]);var smpApp=smpApp||{};smpApp.directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]);var smpApp=smpApp||{};smpApp.service("fileUpload",["$http",function($http){this.uploadFileToSplit=function(file,uploadUrl,startPageNumber,endPageNumber,callBackAfterUpload,errorCallBackAfterSplitUpload){var fd=new FormData;void 0!=file&&fd.append("fileUpload",file),startPageNumber&&fd.append("startPageNumber",startPageNumber),endPageNumber&&fd.append("endPageNumber",endPageNumber),$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0},responseType:"arraybuffer"}).success(function(response,status,headers){callBackAfterUpload(response,status,headers)}).error(function(data){errorCallBackAfterSplitUpload(data)})},this.uploadFilesToMerge=function(uploadedfiles,uploadUrl,callBackAfterMergeUpload,errorCallBackAfterMergeUpload){var fd=new FormData;if(void 0!=uploadedfiles)for(var i=0;i<uploadedfiles.length;i++)fd.append("filesUpload",uploadedfiles[i]);$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0},responseType:"arraybuffer"}).success(function(response,status,headers){callBackAfterMergeUpload(response,status,headers)}).error(function(data){errorCallBackAfterMergeUpload(data)})},this.uploadFileToBucket=function(file,uploadUrl){return uploadPromise=$http({url:"https://angular-file-upload.s3.amazonaws.com/",method:"POST",data:{key:file.name,AWSAccessKeyId:YOURAWSAccessKeyId,acl:"private",policy:$scope.policy,signature:$scope.signature,"Content-Type":""!=file.type?file.type:"application/octet-stream",filename:file.name,file:file}}),uploadPromise}}]);var smpApp=smpApp||{};smpApp.split=angular.module("smp.splitmergepdfs.split",[]);var smpApp=smpApp||{};smpApp.split.controller("splitCtrl",["$scope","$http","$state","$rootScope","$timeout","$stateParams","$state","fileUpload",function($scope,$http,$state,$rootScope,$timeout,$stateParams,$state,fileUpload){$scope.startPageNumber="",$scope.endPageNumber="",$scope.fileToImport="",$scope.showErrorMessage=!1,$scope.errorMessage="",$scope.onFileSelect=function(element){var file=element.files[0],sFileName=file.name;$scope.fileToImport=file,$timeout(function(){var _validFileExtensions=[".pdf"];if(sFileName.length>0){var invalidFileExtUploaded=!1,sCurExtension=_validFileExtensions[0];invalidFileExtUploaded=sFileName.substr(sFileName.length-sCurExtension.length,sCurExtension.length).toLowerCase()!=sCurExtension.toLowerCase(),invalidFileExtUploaded?($scope.fileValue="",$scope.errorMessage="Please upload a PDF file to split",$scope.showErrorMessage=!0):($scope.showErrorMessage=!1,$scope.errorMessage="",$scope.fileValue=sFileName)}})},$scope.callBackAfterUpload=function(response,status,headers){if(angular.isDefined(response)&&200==status){var anchorLink=document.createElement("a");document.body.appendChild(anchorLink),anchorLink.style="display: none";var file=new Blob([response],{type:headers("content-type")}),contentDispositionHeader=headers("Content-Disposition"),fileName=contentDispositionHeader.split(";")[1].trim().split("=")[1],fileUrl=URL.createObjectURL(file);anchorLink.href=fileUrl,anchorLink.target="_blank",anchorLink.download=fileName,$scope.downloadLinkName=fileName;var indexOfDashFromLast=$scope.downloadLinkName.lastIndexOf("-");$scope.downloadLinkName=$scope.downloadLinkName.substr(0,indexOfDashFromLast),$scope.successStatus="File "+$scope.downloadLinkName+" Splitted successfully.",$scope.showSuccessStatus=!0,anchorLink.click()}else null!=data&&data.messages?($scope.errorMessage=data.messages,$scope.showErrorMessage=!0):($scope.errorMessage="Something Went Wrong , Please try again.",$scope.showErrorMessage=!0)},$scope.errorCallBackAfterSplitUpload=function(data){null!=data&&data.messages?($scope.errorMessage=data.messages,$scope.showErrorMessage=!0):($scope.errorMessage="Something Went Wrong , Please try again.",$scope.showErrorMessage=!0)},$scope.split=function(startPageNumber,endPageNumber){if(!$scope.fileValue||""==$scope.fileValue||!$scope.fileToImport)return $scope.errorMessage="Please upload a file to split",void($scope.showErrorMessage=!0);var uploadUrl=_appContextUrl+"rest/smpaction/split";fileUpload.uploadFileToSplit($scope.fileToImport,uploadUrl,startPageNumber,endPageNumber,$scope.callBackAfterUpload,$scope.errorCallBackAfterSplitUpload)}}]);var smpApp=smpApp||{};smpApp.controller("headerCtrl",["$scope","$state",function($scope,$state){}]);var smpApp=smpApp||{};smpApp.split.controller("baseCtrl",["$scope","$state",function($scope,$state){$scope.init=function(){$state.go("splitmergepdfs.split")}()}]);var smpApp=smpApp||{};smpApp.split.controller("footerCtrl",["$scope","$http","$state","$rootScope","$timeout","$stateParams","$log","$window","$state",function($scope,$http,$state,$rootScope,$timeout,$stateParams,$log,$window,$state){}]);var smpApp=smpApp||{};smpApp.merge=angular.module("smp.splitmergepdfs.merge",[]);var smpApp=smpApp||{};smpApp.merge.controller("mergeCtrl",["$scope","$state","fileUpload",function($scope,$state,fileUpload){$scope.filesToImport=[],$scope.onFileSelect=function(element){var file="";file=element.files[0],$scope.filesToImport.push(file);var sFileName=file.name;$timeout(function(){var _validFileExtensions=[".pdf"];if(sFileName.length>0){var invalidFileExtUploaded=!1,sCurExtension=_validFileExtensions[0];invalidFileExtUploaded=sFileName.substr(sFileName.length-sCurExtension.length,sCurExtension.length).toLowerCase()!=sCurExtension.toLowerCase(),invalidFileExtUploaded?($scope.fileValue="",$scope.mergeUploadErrorMessage="Please upload a PDF file to split"):$scope.fileValue=sFileName}})},$scope.callBackAfterMergeUpload=function(response,status,headers){if(angular.isDefined(response)&&200==status){var anchorLink=document.createElement("a");document.body.appendChild(anchorLink),anchorLink.style="display: none";var file=new Blob([response],{type:headers("content-type")}),contentDispositionHeader=headers("Content-Disposition"),fileName=contentDispositionHeader.split(";")[1].trim().split("=")[1],fileUrl=URL.createObjectURL(file);anchorLink.href=fileUrl,anchorLink.target="_blank",anchorLink.download=fileName,$scope.downloadLinkName=fileName;var indexOfDashFromLast=$scope.downloadLinkName.lastIndexOf("-");$scope.downloadLinkName=$scope.downloadLinkName.substr(0,indexOfDashFromLast),$scope.successStatusMessage="Successfully merged the uploaded  "+$scope.uploadedFileName+"   Files.",anchorLink.click()}else null!=data&&data.messages?$scope.mergeUploadErrorMessage=data.messages:$scope.mergeUploadErrorMessage="Something Went Wrong , Please try again."},$scope.errorCallBackAfterMergeUpload=function(data){null!=data&&data.messages?$scope.mergeUploadErrorMessage=data.messages:$scope.mergeUploadErrorMessage="Something Went Wrong , Please try again."},$scope.merge=function(){if(!$scope.filesToImport||$scope.filesToImport&&$scope.filesToImport.length<2)return void($scope.mergeUploadErrorMessage="Please upload at least two files to merge");var uploadUrl=_appContextUrl+"rest/smpaction/uploadForMerge",fileNames=[];angular.forEach($scope.filesToImport,function(value,key){fileNames.push(value.name)}),$scope.uploadedFileName=fileNames.join(),fileUpload.uploadFilesToMerge($scope.filesToImport,uploadUrl,$scope.callBackAfterMergeUpload,$scope.errorCallBackAfterMergeUpload)}}]);